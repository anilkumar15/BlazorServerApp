@page "/createproduct"
@using Blazor_App.Models
@using Blazor_App.Services
@inject NavigationManager uriHelper;
@inject IService<Product, int> productService
<EditForm OnValidSubmit="@saveProduct" Model="@product">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <h2>Create new Product</h2>
    <div class="container">
        <div class="form-group">
            <label for="ProductId">Product Id</label>
            <InputText @bind-Value="product.ProductId" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="ProductName">Product Name</label>
            <InputText @bind-Value="product.ProductName" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="CategoryName">Category Name</label>
            
            <InputSelect @bind-Value="@product.CategoryName" class="form-control">
                <option>Select Category Name</option>
                @foreach (var cat in Constants.Categories)
                {
                    <option value="@cat">@cat</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="Manufacturer">Manufacturer</label>
            
            <InputSelect @bind-Value="@product.Manufacturer" class="form-control">
                <option>Select Manufacturer</option>
                @foreach (var man in Constants.Manufacturers)
                {
                    <option value="@man">@man</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="Description">Description</label>
            <InputText @bind-Value="product.Description" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="BasePrice">Base Price</label>
            <InputNumber @bind-Value="product.BasePrice" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-success" value="Save">
            <input type="button" class="btn btn-danger" value="Cancel"
                   @onclick="@cancelOperation">
        </div>
    </div>

</EditForm>
@code {
    private Product product;
    
    protected override Task OnInitializedAsync()
    {
        product = new Product();
        return base.OnInitializedAsync();
    }
    async void saveProduct()
    {
        product = await productService.CreateAsync(product);
        if (product.ProductRowId > 0)
        {
            uriHelper.NavigateTo("/listproducts");
        }
    }

    void cancelOperation()
    {
        uriHelper.NavigateTo("/listproducts");
    }
}